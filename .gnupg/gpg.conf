# Options for GnuPG

# Don't show the copyright notice.
no-greeting

# Automatically fetch keys as needed from the keyserver when verifying
# signatures or when importing keys that have been revoked by a revocation key
# that is not present on the keyring.
keyserver hkps://hkps.pool.sks-keyservers.net
keyserver-options auto-key-retrieve no-include-revoked

# When outputting certificates, view user IDs distinctly from keys:
fixed-list-mode

# Long keyids are more collision-resistant than short keyids (it's trivial to make a key with any desired short keyid)
keyid-format 0xlong

# When multiple digests are supported by all recipients, choose the strongest one:
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# Preferences chosen for new keys should prioritize stronger algorithms:
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 BZIP2 ZLIB ZIP Uncompressed

# If you use a graphical environment (and even if you don't) you should be using an agent:
# (similar arguments as https://www.debian-administration.org/users/dkg/weblog/64)
use-agent

# Store the keyring and trustdb in a Dropbox folder
no-default-keyring
trustdb-name ~/Dropbox/gnupg/trustdb.gpg
keyring ~/Dropbox/gnupg/pubring.gpg

# You should always know at a glance which User IDs gpg thinks are legitimately bound to the keys in your keyring:
verify-options show-uid-validity
list-options show-uid-validity

# Include the full fingerprint of the key doing the signing.
sig-notation issuer-fpr@notations.openpgp.fifthhorseman.net=%g

# Ask me for the certifcation level.
ask-cert-level

# When making an OpenPGP certification, use a stronger digest than the default SHA1:
cert-digest-algo SHA256
